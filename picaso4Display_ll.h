#pragma once
#include <ch.h>
#include <hal.h>
    
void txt_moveCursor(OledConfig *oledConfig, uint16_t line, uint16_t column);
void txt_putCh(OledConfig *oledConfig, uint16_t car);
void txt_putStr(OledConfig *oledConfig, char* str0);
void txt_charWidth(OledConfig *oledConfig, char car, int16_t *width);
void txt_charHeight(OledConfig *oledConfig, char car, int16_t *height);
void txt_Fgcolour(OledConfig *oledConfig, uint16_t color);
void txt_Bgcolour(OledConfig *oledConfig, uint16_t color);
void txt_fontID(OledConfig *oledConfig, uint16_t id);
void txt_widthMult(OledConfig *oledConfig, uint16_t wMultiplier);
void txt_heightMult(OledConfig *oledConfig, uint16_t hMultiplier);
void txt_xgap(OledConfig *oledConfig, uint16_t xGap);
void txt_ygap(OledConfig *oledConfig, uint16_t yGap);
void txt_bold(OledConfig *oledConfig, uint16_t mode);
void txt_inverse(OledConfig *oledConfig, uint16_t mode);
void txt_italic(OledConfig *oledConfig, uint16_t mode);
void txt_opacity(OledConfig *oledConfig, uint16_t mode);
void txt_underline(OledConfig *oledConfig, uint16_t mode);
void txt_attributes(OledConfig *oledConfig, uint16_t bitfield);
void txt_set(OledConfig *oledConfig, uint16_t function, uint16_t value);
void txt_wrap(OledConfig *oledConfig, uint16_t xpos);
void gfx_cls(OledConfig *oledConfig);
void gfx_changeColour(OledConfig *oledConfig, uint16_t oldColor, uint16_t newColor);
void gfx_circle(OledConfig *oledConfig, uint16_t x, uint16_t y, uint16_t radius, uint16_t color);
void gfx_circleFilled(OledConfig *oledConfig, uint16_t x, uint16_t y, uint16_t radius, uint16_t color);
void gfx_line(OledConfig *oledConfig, uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t color);
void gfx_rectangle(OledConfig *oledConfig, uint16_t tlx, uint16_t tly, uint16_t brx, uint16_t bry, uint16_t color);
void gfx_rectangleFilled(OledConfig *oledConfig, uint16_t tlx, uint16_t tly, uint16_t brx, uint16_t bry, uint16_t color);
void gfx_polyline(OledConfig *oledConfig, uint16_t n, uint16_t vx, uint16_t vy, uint16_t color);
void gfx_polygon(OledConfig *oledConfig, uint16_t n, uint16_t vx, uint16_t vy, uint16_t color);
void gfx_polygonFilled(OledConfig *oledConfig, uint16_t n, uint16_t vx, uint16_t vy, uint16_t color);
void gfx_triangle(OledConfig *oledConfig, uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t x3, uint16_t y3, uint16_t color);
void gfx_triangleFilled(OledConfig *oledConfig, uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t x3, uint16_t y3, uint16_t color);
void gfx_orbit(OledConfig *oledConfig, uint16_t angle, uint16_t distance, int16_t *Xdist, int16_t *Ydist);
void gfx_putPixel(OledConfig *oledConfig, uint16_t x, uint16_t y, uint16_t color);
void gfx_getPixel(OledConfig *oledConfig, uint16_t x, uint16_t y, int16_t *color);
void gfx_moveTo(OledConfig *oledConfig, uint16_t x, uint16_t y);
void gfx_lineTo(OledConfig *oledConfig, uint16_t x, uint16_t y);
void gfx_clipping(OledConfig *oledConfig, uint16_t mode);
void gfx_clipWindow(OledConfig *oledConfig, uint16_t tlx, uint16_t tly, uint16_t brx, uint16_t bry);
void gfx_setClipRegion(OledConfig *oledConfig);
void gfx_ellipse(OledConfig *oledConfig, uint16_t x, uint16_t y, uint16_t xrad, uint16_t yrad, uint16_t color);
void gfx_ellipseFilled(OledConfig *oledConfig, uint16_t x, uint16_t y, uint16_t xrad, uint16_t yrad, uint16_t color);
void gfx_button(OledConfig *oledConfig, uint16_t state, uint16_t x, uint16_t y, uint16_t buttoncolor, uint16_t txtcolor, uint16_t font, uint16_t twtWidth, uint16_t twtHeight, char* str0);
void gfx_panel(OledConfig *oledConfig, uint16_t state, uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t color);
void gfx_slider(OledConfig *oledConfig, uint16_t mode, uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t color, uint16_t scale, uint16_t value);
void gfx_screenCopyPaste(OledConfig *oledConfig, uint16_t xs, uint16_t ys, uint16_t xd, uint16_t yd, uint16_t width, uint16_t height);
void gfx_bevelShadow(OledConfig *oledConfig, uint16_t value, int16_t *status);
void gfx_bevelWidth(OledConfig *oledConfig, uint16_t value, int16_t *status);
void gfx_bGcolour(OledConfig *oledConfig, uint16_t color);
void gfx_outlineColour(OledConfig *oledConfig, uint16_t color);
void gfx_contrast(OledConfig *oledConfig, uint16_t contrast);
void gfx_frameDelay(OledConfig *oledConfig, uint16_t delayMsec);
void gfx_linePattern(OledConfig *oledConfig, uint16_t pattern);
void gfx_screenMode(OledConfig *oledConfig, uint16_t mode);
void gfx_transparency(OledConfig *oledConfig, uint16_t mode, int16_t *previous);
void gfx_transparentColour(OledConfig *oledConfig, uint16_t color, int16_t *previous);
void gfx_set(OledConfig *oledConfig, uint16_t function, uint16_t mode);
void gfx_get(OledConfig *oledConfig, uint16_t mode, int16_t *value);
void media_init(OledConfig *oledConfig, int16_t *value);
void media_setAdd(OledConfig *oledConfig, uint16_t hiAddr, uint16_t loAddr);
void media_setSector(OledConfig *oledConfig, uint16_t hiAddr, uint16_t loAddr);
void media_readSector(OledConfig *oledConfig, uint8_t *sector);
void media_writeSector(OledConfig *oledConfig, uint8_t sector);
void media_readByte(OledConfig *oledConfig, int16_t *value);
void media_readWord(OledConfig *oledConfig, int16_t *value);
void media_writeByte(OledConfig *oledConfig, uint16_t value, int16_t *status);
void media_writeWord(OledConfig *oledConfig, uint16_t value, int16_t *status);
void media_flush(OledConfig *oledConfig, int16_t *status);
void media_image(OledConfig *oledConfig, uint16_t x, uint16_t y);
void media_video(OledConfig *oledConfig, uint16_t x, uint16_t y);
void media_videoFrame(OledConfig *oledConfig, uint16_t x, uint16_t y, uint16_t frameNumber);
void misc_peekB(OledConfig *oledConfig, uint16_t eveRegIndex, int16_t *value);
void misc_pokeB(OledConfig *oledConfig, uint16_t eveRegIndex, uint16_t value);
void misc_peekW(OledConfig *oledConfig, uint16_t eveRegIndex, int16_t *value);
void misc_pokeW(OledConfig *oledConfig, uint16_t eveRegIndex, uint16_t value);
void misc_peekM(OledConfig *oledConfig, uint16_t address, int16_t *value);
void misc_pokeM(OledConfig *oledConfig, uint16_t address, uint16_t value);
void misc_joystick(OledConfig *oledConfig, int16_t *value);
void misc_beep(OledConfig *oledConfig, uint16_t note, uint16_t duration_ms);
void misc_setbaudWait(OledConfig *oledConfig, uint16_t index);
void misc_blitComtoDisplay(OledConfig *oledConfig, uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint16_t data);
void sys_sleep(OledConfig *oledConfig, uint16_t duration_s, int16_t *duration);
void sys_memFree(OledConfig *oledConfig, uint16_t handle, int16_t *value);
void sys_memHeap(OledConfig *oledConfig, int16_t *avail);
void sys_getModel(OledConfig *oledConfig, int16_t *count, int16_t *str);
void sys_getVersion(OledConfig *oledConfig, int16_t *version);
void sys_getPmmC(OledConfig *oledConfig, int16_t *version);
void misc_screenSaverTimeout(OledConfig *oledConfig, uint16_t timout_ms);
void misc_screenSaverSpeed(OledConfig *oledConfig, uint16_t speed_index);
void misc_screenSaverMode(OledConfig *oledConfig, uint16_t mode);
void touch_detectRegion(OledConfig *oledConfig, uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2);
void touch_set(OledConfig *oledConfig, uint16_t mode);
void touch_get(OledConfig *oledConfig, uint16_t mode, int16_t *value);
